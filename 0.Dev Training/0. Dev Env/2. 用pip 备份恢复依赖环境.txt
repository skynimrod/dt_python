. 参见:

   http://www.cnblogs.com/turingbrain/p/5429871.html

. pip自动生成requirements.txt依赖关系清单

  pip freeze > requirements.txt

  这样就自动生成requirements.txt了。如果需要生成在虚拟环境下的依赖关系，需要先进入虚拟环境。

 

在很多Python项目中都包含一个requirements.pip文件，里面写的是一些包的名称和版本之类的信息，这是做什么用的呢？

比如一个requirements.pip文件内容如下：

html5lib==0.999
ipdb==0.8
ipython==2.3.1
mongo==0.2.0
path.py==7.0
python-dateutil==2.3
requests==2.5.0
unicodecsv==0.9.4

 

这里面写的是运行这个项目所需要的环境，包括一些库，运行之前需要使用pip install -r requirements.pip命令安装这些库。

. 察看目标包所有可用的版本

  只需要指定一个不存在的版本即可,就会返回所有可用的版本编号

(env4) F:\F_3_test\3_Python>pip install celery==3.2
Collecting celery==3.2
  Could not find a version that satisfies the requirement celery==3.2 (from vers
ions: 0.1.2, 0.1.4, 0.1.6, 0.1.7, 0.1.8, 0.1.10, 0.1.11, 0.1.12, 0.1.13, 0.1.14,
 0.1.15, 0.2.0, 0.3.0, 0.3.7, 0.3.20, 0.4.0, 0.4.1, 0.6.0, 0.8.0, 0.8.1, 0.8.2,
0.8.3, 0.8.4, 1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.0.6, 2.0.0, 2.0.1, 2.0
.2, 2.0.3, 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.2.0, 2.2.1, 2.2.2, 2.2.3, 2.2.4,
 2.2.5, 2.2.6, 2.2.7, 2.2.8, 2.2.9, 2.2.10, 2.3.0, 2.3.1, 2.3.2, 2.3.3, 2.3.4, 2
.3.5, 2.4.0, 2.4.1, 2.4.2, 2.4.3, 2.4.4, 2.4.5, 2.4.6, 2.4.7, 2.5.0, 2.5.1, 2.5.
2, 2.5.3, 2.5.5, 3.0.0, 3.0.1, 3.0.2, 3.0.3, 3.0.4, 3.0.5, 3.0.6, 3.0.7, 3.0.8,
3.0.9, 3.0.10, 3.0.11, 3.0.12, 3.0.13, 3.0.14, 3.0.15, 3.0.16, 3.0.17, 3.0.18, 3
.0.19, 3.0.20, 3.0.21, 3.0.22, 3.0.23, 3.0.24, 3.0.25, 3.1.0, 3.1.1, 3.1.2, 3.1.
3, 3.1.4, 3.1.5, 3.1.6, 3.1.7, 3.1.8, 3.1.9, 3.1.10, 3.1.11, 3.1.12, 3.1.13, 3.1
.14, 3.1.15, 3.1.16, 3.1.17, 3.1.18, 3.1.19, 3.1.20, 3.1.21, 3.1.22, 3.1.23, 3.1
.24, 3.1.25, 4.0.0rc3, 4.0.0rc4, 4.0.0rc5, 4.0.0rc6, 4.0.0rc7, 4.0.0)
No matching distribution found for celery==3.2
