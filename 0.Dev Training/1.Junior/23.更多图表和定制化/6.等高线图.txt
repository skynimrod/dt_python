. 创建等高线图( contour plot)

      等高线图(contour plot) 显示的是矩形的等值线( isolines ). 等值线使用数值相等的个点连成的曲线. 数值通过一个有两个参数的函数获得.

. 准备工作

      Z 矩阵的等高线图 由许多等高线表示, 这里的Z 被视为 相对于 X-Y 平面的高度. Z 的最小值为2, 并且必须包括至少两个不同的值.

      等高线图的缺陷之一是 如何在编码时不为等值线添加标签, 它将毫无意义, 因为我们不能分辨出最高点和最低点, 或者找出局部极小值.

      我们需要为等高线添加标签. 可以使用标签( clabel() ) 或者 colormaps 为等值线添加标签. 入股哦你的输出媒介允许使用颜色, colormaps 是首选, 因为观察者将更容易理解数据.

      等高线图的另一个风险是如何选择要绘制的等值线数量. 如果选择太多, 图表就会变得太密集从而难以理解; 如果选择的太少, 将丢失信息, 从而对数据做出不同的理解.

      函数contour() 会自动猜测出 将绘制 多少 等值线, 但我们也可以 指定数量.

      在matplotlib 中, 用 matplotlib.pyplot.contour 绘制等高线图.

      这里有两个相似的函数: contour() 绘制等高线, contourf() 绘制填充的等高线.  例子中仅演示contour(), 但几乎所有内容对contourf() 都是适用的. 而且, 它们的参数几乎相同.

      contour() 函数可以有不同的调用签名(如下)，这取决于我们拥有的数据和(或者)我们想要可视化的属性

      ------------------------------------------
      调用签名                          描述
      -----------------------------------------
      contour(Z)              绘制Z (数组)的等高线. 自动选择水平值.
 
      contour(X, Y, Z)        绘制X, Y和 Z 的等高线.  X 和 Y 数组为(x,y)平面坐标(surface coordinates)

      contour(Z, N)   -----+ 
                           +--绘制 等高线, 水平之在N中指定. 自动选择水平值
      contour(X, Y, Z, N)--+

      contour(Z, V)   -----+ 
                           +--绘制 等高线, 水平之在V中指定. 
      contour(X, Y, Z, V)--+

      contour(..., V)         填充V序列中的水平值之间的len(V)-1个区域      

      contour(Z,**kwargs)     使用关键字参数控制一般线条属性(颜色、线宽、起点, 颜色映射表(color map) 等)

      -------------------------------------------------------

      X, Y 和 Z  的形状和纬度存在一定的限制. 例如， X 和 Y 可以是 二维的, 与 Z 形状相同. 如果他们是一维的, 则 X的长度等于 Z 的列数, Y 的长度将等于Z 的行数.

. 操作步骤

  1. 实现一个方法来模拟信号处理器

  2. 生成一些线型信号数据

  3. 把数据转换到合适的矩阵中 供矩阵操作使用

  4. 绘制等高线

  5. 添加等高线标签

  6. 显示图形.

. 例子代码 : 6_coutour.py

. 工作原理

      从numpy 借助少数几个helper 方法来创建范围和矩阵

      在对my_function 求值 并存储在Z之后, 简单的调用contour, 并传入Z 和 等值线水平数量.

      此时, 可以尝试用N arange() 调用中的第三个参数做个实验. 例如, 尝试将 N = np.arange(-1, 1.5, 0.3) 的参数做一些修改, 将0.3 改为0.1或1, 来体验一下对相同数据进行不同编码时, 它在等高线图中呈现的差异.

      此外, 通过简单的传入一个CS( matplotlib.contour.QuadContourSet 实例) 向图表添加了一个颜色映射表.